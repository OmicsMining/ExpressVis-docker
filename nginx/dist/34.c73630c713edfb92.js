"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[34],{7499:(F,T,l)=>{l.d(T,{Oi:()=>e,sj:()=>c,Dj:()=>G});const e=function(o,d,h,I,L){if("Protein profiling by Mass Spec"===o){const g=h.split(";");let _=[],D=[];return g.forEach(u=>{if(null==d?void 0:d.hasOwnProperty(u)){const f=d[u],p=f[L];_.push(f[I]),D.push(p)}else _.push(null),D.push(null)}),[_.join(";"),D.join(";")]}if(null==d?void 0:d.hasOwnProperty(h)){const g=d[h];return[g[I],g[L]]}return[null,null]},c=function(o,d){return o+"-"+d},G=function(o,d){const h=o.samples,I=o.geneIDs,L=o.expressionValues,g=d.attributes,_=d.genesInfoDic;let D=[];for(let u=0;u<I.length;u++){let f={};f.ID=I[u];const m=L[u];for(let p=0;p<h.length;p++)f[h[p]]=m[p];if(null==_?void 0:_.hasOwnProperty(I[u])){const p=_[I[u]];for(let b=0;b<g.length;b++)f[g[b]]=p[b]}else for(let p=0;p<g.length;p++)f[g[p]]="";D.push(f)}return{features:["ID",...g].concat(h),genesInfo:D}}},7166:(F,T,l)=>{l.d(T,{D:()=>P});var e=l(3668),c=l(3963),G=l(6019),o=l(9133);function h(s,r){if(1&s&&(e.TgZ(0,"option",12),e._uU(1),e.qZA()),2&s){const t=r.$implicit;e.Q6J("value",t.taxID),e.xp6(1),e.hij(" ",t.name," ")}}function I(s,r){if(1&s&&(e.TgZ(0,"option",12),e._uU(1),e.qZA()),2&s){const t=r.$implicit;e.Q6J("value",t.name),e.xp6(1),e.hij(" ",t.description," ")}}let L=(()=>{class s{constructor(){this.outputGeneList$=new e.vpe,this.geneListInputForm=new o.cw({speciesID:new o.NI("",o.kI.required),IDtype:new o.NI("",o.kI.required),inputString:new o.NI("",o.kI.required),geneListName:new o.NI("",o.kI.required)})}ngOnInit(){this.availableSpecies&&this.availableSpecies.length>=1&&this.geneListInputForm.patchValue({speciesID:this.availableSpecies[0].taxID}),this.availableGeneIDtypes&&this.availableGeneIDtypes.length>=1&&this.geneListInputForm.patchValue({IDtype:this.availableGeneIDtypes[0].name})}ngOnChanges(t){t.availableSpecies&&!t.availableSpecies.isFirstChange()&&this.geneListInputForm.patchValue({speciesID:this.availableSpecies[0].taxID}),t.availableGeneIDtypes&&!t.availableGeneIDtypes.isFirstChange()&&this.geneListInputForm.patchValue({IDtype:this.availableGeneIDtypes[0].name})}onSubmit(t){const n=this.geneListInputForm.value,a=((s,r)=>s.trim().split(/\n|,|;|\t/).map(n=>n.trim()))(n.inputString);this.outputGeneList$.next({speciesID:n.speciesID,IDtype:n.IDtype,genes:a,name:n.geneListName})}}return s.\u0275fac=function(t){return new(t||s)},s.\u0275cmp=e.Xpm({type:s,selectors:[["app-input-gene-list"]],inputs:{availableSpecies:"availableSpecies",availableGeneIDtypes:"availableGeneIDtypes"},outputs:{outputGeneList$:"outputGeneList$"},features:[e.TTD],decls:23,vars:4,consts:[[3,"formGroup","ngSubmit"],[1,"form-group"],["for","speciesID"],["formControlName","speciesID","name","speciesID",1,"form-control","form-control-sm"],[3,"value",4,"ngFor","ngForOf"],["for","IDtype"],["formControlName","IDtype","name","IDtype",1,"form-control","form-control-sm"],["for","inputString"],["type","text","formControlName","inputString","placeholder","Seperate with '\\n', ',' or ';'.  Example: TRP53,STAT1,STAT3",1,"form-control","form-control-sm"],["for","geneListName"],["formControlName","geneListName","name","geneListName","placeholder","Name gene list to make it available in other places",1,"form-control","form-control-sm"],["data-testid","submitGeneList","type","submit",1,"btn","btn-sm","btn-expressvis",3,"disabled"],[3,"value"]],template:function(t,n){1&t&&(e.TgZ(0,"form",0),e.NdJ("ngSubmit",function(i){return n.onSubmit(i)}),e.TgZ(1,"div",1),e.TgZ(2,"label",2),e._uU(3,"Species"),e.qZA(),e.TgZ(4,"select",3),e.YNc(5,h,2,2,"option",4),e.qZA(),e.qZA(),e.TgZ(6,"div",1),e.TgZ(7,"label",5),e._uU(8,"Gene ID type"),e.qZA(),e.TgZ(9,"select",6),e.YNc(10,I,2,2,"option",4),e.qZA(),e.qZA(),e.TgZ(11,"div",1),e.TgZ(12,"label",7),e._uU(13,"Paste Genes"),e.qZA(),e.TgZ(14,"textarea",8),e._uU(15,"    "),e.qZA(),e.qZA(),e.TgZ(16,"div",1),e.TgZ(17,"label",9),e._uU(18,"Input Gene List Name"),e.qZA(),e._UZ(19,"input",10),e.qZA(),e.TgZ(20,"div",1),e.TgZ(21,"button",11),e._uU(22,"Submit"),e.qZA(),e.qZA(),e.qZA()),2&t&&(e.Q6J("formGroup",n.geneListInputForm),e.xp6(5),e.Q6J("ngForOf",n.availableSpecies),e.xp6(5),e.Q6J("ngForOf",n.availableGeneIDtypes),e.xp6(11),e.Q6J("disabled",!n.geneListInputForm.valid))},directives:[o._Y,o.JL,o.sg,o.EJ,o.JJ,o.u,G.sg,o.Fj,o.YN,o.Kr],styles:[""],changeDetection:0}),s})();var g=l(9220),_=l(4863),D=l(3013),u=l(3553);let f=(()=>{class s{constructor(){this.annotationTermsRequest$=new e.vpe,this.annotationGenesRequest$=new e.vpe,this.geneAnnotationTypes=g.xt,this.selectedSpeciesID="",this.selectedAnnotationType=""}ngOnInit(){}processSelectedSpecies(t){this.selectedSpeciesID=t.taxID}processSelectedAnnotationType(t){this.annotationTermsRequest$.next({speciesID:this.selectedSpeciesID,annotationType:t}),this.selectedAnnotationType=t}selectAnnotation(t){this.annotationGenesRequest$.next({speciesID:this.selectedSpeciesID,annotationID:t.item.annotationID,annotationTerm:t.item.annotationTerm,annotationType:this.selectedAnnotationType})}}return s.\u0275fac=function(t){return new(t||s)},s.\u0275cmp=e.Xpm({type:s,selectors:[["app-input-an-annotation-for-gene-list"]],inputs:{availableSpecies:"availableSpecies",annotationTerms:"annotationTerms"},outputs:{annotationTermsRequest$:"annotationTermsRequest$",annotationGenesRequest$:"annotationGenesRequest$"},decls:5,vars:7,consts:[[3,"availableSpecies","selectedSpecies$"],["data-testid","selectAnnotationType",3,"inputItems","itemLabel","ifOutputFirstValue","selectedItem$"],["for","species"],["data-testid","inputAnnotationTerm","typeaheadOptionField","annotationTerm","placeholder","like NF-kappa, Wnt, or Fatty acids",1,"form-control","form-control-sm",3,"disabled","typeahead","ngModel","ngModelChange","typeaheadOnSelect"]],template:function(t,n){1&t&&(e.TgZ(0,"app-select-species",0),e.NdJ("selectedSpecies$",function(i){return n.processSelectedSpecies(i)}),e.qZA(),e.TgZ(1,"app-select-item",1),e.NdJ("selectedItem$",function(i){return n.processSelectedAnnotationType(i)}),e.qZA(),e.TgZ(2,"h5",2),e._uU(3,"Annotation Name"),e.qZA(),e.TgZ(4,"input",3),e.NdJ("ngModelChange",function(i){return n.asyncSelected=i})("typeaheadOnSelect",function(i){return n.selectAnnotation(i)}),e.qZA()),2&t&&(e.Q6J("availableSpecies",n.availableSpecies),e.xp6(1),e.Q6J("inputItems",n.geneAnnotationTypes)("itemLabel","Annotation Type")("ifOutputFirstValue",!1),e.xp6(3),e.Q6J("disabled",!((null==n.annotationTerms?null:n.annotationTerms.length)>0))("typeahead",n.annotationTerms)("ngModel",n.asyncSelected))},directives:[_.a,D.y,o.Fj,u.Bp,o.JJ,o.On],styles:[""],changeDetection:0}),s})();var m=l(94),p=l(4099),b=l(2668),A=l(6087),v=l(8735),y=l(8053),N=l(8805),x=l(5571),$=l(1026),w=l(4816);const S=["submitButton"];function C(s,r){if(1&s&&(e.TgZ(0,"p",6),e._uU(1),e.qZA()),2&s){const t=e.oxw();e.xp6(1),e.hij(" ",t.geneNumberAfterFilter," genes are in the gene list. Click Submit button to add this gene list\n")}}let Z=(()=>{class s extends m.e{constructor(){super(),this.geneListFromDatasetRequest$=new e.vpe,this.datasetIDsubject=new p.X(null),this.cvTopPercentSubject=new p.X(null)}ngOnInit(){(0,b.aj)([this.datasetIDsubject.pipe((0,v.h)(t=>null!=t)),this.cvTopPercentSubject.pipe((0,v.h)(t=>null!=t))]).pipe((0,y.U)(([t,n])=>({datasetID:t,cvTopPercent:n,ifDetermined:!1})),(0,N.R)(this.destroyNotifier$)).subscribe(t=>{this.geneListFromDatasetRequest$.next(t)})}ngAfterViewInit(){this.submitStream$=(0,A.R)(this.submitButton.nativeElement,"click"),this.submitStream$.pipe((0,N.R)(this.destroyNotifier$),(0,v.h)(t=>null!=t),(0,x.M)(this.datasetIDsubject.pipe((0,v.h)(t=>null!=t)),this.cvTopPercentSubject.pipe((0,v.h)(t=>null!=t))),(0,y.U)(([t,n,a])=>({datasetID:n,cvTopPercent:a,ifDetermined:!0}))).subscribe(t=>{this.geneListFromDatasetRequest$.next(t)})}processSelectedDatasetID(t){this.datasetIDsubject.next(t)}processCVpercentage(t){this.cvTopPercentSubject.next(t)}ngOnDestroy(){super.ngOnDestroy()}}return s.\u0275fac=function(t){return new(t||s)},s.\u0275cmp=e.Xpm({type:s,selectors:[["app-generate-new-gene-list-from-dataset"]],viewQuery:function(t,n){if(1&t&&e.Gf(S,5),2&t){let a;e.iGM(a=e.CRH())&&(n.submitButton=a.first)}},inputs:{allDatasetInfoForDisplay:"allDatasetInfoForDisplay",geneNumberAfterFilter:"geneNumberAfterFilter"},outputs:{geneListFromDatasetRequest$:"geneListFromDatasetRequest$"},features:[e.qOj],decls:10,vars:10,consts:[[1,"mt-2"],[3,"allDatasetInfoForDisplay","formInlineOrNot","selectedDatasetID$"],[3,"minValue","maxValue","defaultValue","formInlineOrNot","step","itemLabel","outputNumber$"],["class","mt-2","data-testid","geneNumberNote",4,"ngIf"],["type","button","data-testid","submitGeneListFromDataset",1,"mt-3","btn","btn-expressvis",3,"disabled"],["submitButton",""],["data-testid","geneNumberNote",1,"mt-2"]],template:function(t,n){1&t&&(e.TgZ(0,"p",0),e._uU(1," Obtain the most variable genes from a dataset. The genelist can be used for later use, like clustering analysis\n"),e.qZA(),e.TgZ(2,"div",0),e.TgZ(3,"app-select-dataset",1),e.NdJ("selectedDatasetID$",function(i){return n.processSelectedDatasetID(i)}),e.qZA(),e.qZA(),e.TgZ(4,"div",0),e.TgZ(5,"app-input-number-with-range",2),e.NdJ("outputNumber$",function(i){return n.processCVpercentage(i)}),e.qZA(),e.qZA(),e.YNc(6,C,2,1,"p",3),e.TgZ(7,"button",4,5),e._uU(9," Submit\n"),e.qZA()),2&t&&(e.xp6(3),e.Q6J("allDatasetInfoForDisplay",n.allDatasetInfoForDisplay)("formInlineOrNot",!1),e.xp6(2),e.Q6J("minValue",0)("maxValue",1)("defaultValue",.2)("formInlineOrNot",!1)("step",.01)("itemLabel","Percentage of Top Variable Genes"),e.xp6(1),e.Q6J("ngIf",n.geneNumberAfterFilter),e.xp6(1),e.Q6J("disabled",!n.geneNumberAfterFilter))},directives:[$.z,w.C,G.O5],styles:[""],changeDetection:0}),s})();const q=["submitbutton"];let O=(()=>{class s{constructor(){this.request$=new e.vpe,this.availableSetOperations=["union","intersection"],this.geneList1ID$=new p.X(null),this.geneList2ID$=new p.X(null),this.setOperation$=new p.X(null)}ngOnInit(){var t;this.availableGeneListIDs=null===(t=this.availableGeneLists)||void 0===t?void 0:t.map(n=>n.name),this.ifSubmitAvailable$=(0,b.aj)([this.geneList1ID$,this.geneList2ID$,this.setOperation$]).pipe((0,y.U)(([n,a,i])=>!!(n&&a&&i)))}ngAfterViewInit(){this.submitStream$=(0,A.R)(this.button.nativeElement,"click"),this.submitStream$.pipe((0,v.h)(t=>null!=t),(0,x.M)(this.geneList1ID$,this.geneList2ID$,this.setOperation$)).subscribe(([t,n,a,i])=>{this.request$.next({geneList1ID:n,geneList2ID:a,method:i})})}ngOnChanges(t){var n;t.availableGeneLists&&!t.availableGeneLists.isFirstChange()&&(this.availableGeneListIDs=null===(n=this.availableGeneLists)||void 0===n?void 0:n.map(a=>a.name))}processSelectedIDofGeneList1(t){let n;this.geneList1ID$.next(t);for(let a of this.availableGeneLists)if(a.name===t){n=a.speciesID;break}this.availableGeneListIDsForGeneList2=this.availableGeneLists.filter(a=>a.speciesID===n&&a.name!=t).map(a=>a.name)}processSelectedIDofGeneList2(t){this.geneList2ID$.next(t)}processSelectedSetOperation(t){this.setOperation$.next(t)}}return s.\u0275fac=function(t){return new(t||s)},s.\u0275cmp=e.Xpm({type:s,selectors:[["app-generate-new-gene-list-from-existed-gene-lists"]],viewQuery:function(t,n){if(1&t&&e.Gf(q,5),2&t){let a;e.iGM(a=e.CRH())&&(n.button=a.first)}},inputs:{availableGeneLists:"availableGeneLists"},outputs:{request$:"request$"},features:[e.TTD],decls:10,vars:12,consts:[[1,"mt-3"],["data-testid","geneListOne",3,"inputItems","itemLabel","ifOutputFirstValue","selectedItem$"],[1,"mt-2"],["data-testid","geneListTwo",3,"inputItems","itemLabel","ifOutputFirstValue","selectedItem$"],["data-testid","newGeneListSetMethod",3,"inputItems","itemLabel","ifOutputFirstValue","selectedItem$"],["type","button","data-testid","submitGeneListFromExisted",1,"mt-3","btn","btn-sm","btn-expressvis",3,"disabled"],["submitbutton",""]],template:function(t,n){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"app-select-item",1),e.NdJ("selectedItem$",function(i){return n.processSelectedIDofGeneList1(i)}),e.qZA(),e.qZA(),e.TgZ(2,"div",2),e.TgZ(3,"app-select-item",3),e.NdJ("selectedItem$",function(i){return n.processSelectedIDofGeneList2(i)}),e.qZA(),e.qZA(),e.TgZ(4,"div",2),e.TgZ(5,"app-select-item",4),e.NdJ("selectedItem$",function(i){return n.processSelectedSetOperation(i)}),e.qZA(),e.qZA(),e.TgZ(6,"button",5,6),e.ALo(8,"async"),e._uU(9," Submit\n"),e.qZA()),2&t&&(e.xp6(1),e.Q6J("inputItems",n.availableGeneListIDs)("itemLabel","Select Gene List 1")("ifOutputFirstValue",!1),e.xp6(2),e.Q6J("inputItems",n.availableGeneListIDsForGeneList2)("itemLabel","Select Gene List 2")("ifOutputFirstValue",!1),e.xp6(2),e.Q6J("inputItems",n.availableSetOperations)("itemLabel","Select Set Operation")("ifOutputFirstValue",!1),e.xp6(1),e.Q6J("disabled",!e.lcZ(8,10,n.ifSubmitAvailable$)))},directives:[D.y],pipes:[G.Ov],styles:[""],changeDetection:0}),s})();const R=function(s){return{active:s}};function J(s,r){if(1&s){const t=e.EpF();e.TgZ(0,"li",7),e.TgZ(1,"a",8),e.NdJ("click",function(){const i=e.CHM(t).$implicit;return e.oxw().selectedNewListWay(i)}),e._uU(2),e.qZA(),e.qZA()}if(2&s){const t=r.$implicit,n=e.oxw();e.xp6(1),e.Q6J("ngClass",e.VKq(2,R,n.selectedWay===t)),e.xp6(1),e.Oqu(t)}}function E(s,r){if(1&s){const t=e.EpF();e.TgZ(0,"app-input-gene-list",9),e.NdJ("outputGeneList$",function(a){return e.CHM(t),e.oxw().processOutputGeneList(a)}),e.qZA()}if(2&s){const t=e.oxw();e.Q6J("availableSpecies",t.availableSpecies)("availableGeneIDtypes",t.availableGeneIDtypes)}}function Q(s,r){if(1&s){const t=e.EpF();e.TgZ(0,"app-input-an-annotation-for-gene-list",10),e.NdJ("annotationTermsRequest$",function(a){return e.CHM(t),e.oxw().processAnnotationTermsRequest(a)})("annotationGenesRequest$",function(a){return e.CHM(t),e.oxw().processAnnotationGenesRequest(a)}),e.qZA()}if(2&s){const t=e.oxw();e.Q6J("availableSpecies",t.availableSpecies)("annotationTerms",t.annotationTerms)}}function M(s,r){if(1&s){const t=e.EpF();e.TgZ(0,"app-generate-new-gene-list-from-dataset",11),e.NdJ("geneListFromDatasetRequest$",function(a){return e.CHM(t),e.oxw().processGeneListFromDatasetRequest(a)}),e.qZA()}if(2&s){const t=e.oxw();e.Q6J("allDatasetInfoForDisplay",t.allDatasetInfoForDisplay)("geneNumberAfterFilter",t.geneNumberAfterFilter)}}function W(s,r){if(1&s){const t=e.EpF();e.TgZ(0,"app-generate-new-gene-list-from-existed-gene-lists",12),e.NdJ("request$",function(a){return e.CHM(t),e.oxw().processNewGeneListFromExistedRequest(a)}),e.qZA()}if(2&s){const t=e.oxw();e.Q6J("availableGeneLists",t.availableGeneLists)}}function U(s,r){if(1&s&&(e.TgZ(0,"p",13),e._uU(1),e.qZA()),2&s){const t=e.oxw();e.xp6(1),e.hij(" Success: The gene list has been successfully generated. Its name is '",t.latestAddedGeneListID,"'\n")}}let P=(()=>{class s{constructor(){this.outputGeneList$=new e.vpe,this.annotationTermsRequest$=new e.vpe,this.annotationGenesRequest$=new e.vpe,this.geneListFromDatasetRequest$=new e.vpe,this.geneListFromExistedRequest$=new e.vpe,this.availableWays=["Input Manually","Load Genes in a Pathway or GO term","Obtain Top Variable Genes from Dataset","New Gene List From the Existed Gene Lists"],this.selectedWay="Input Manually"}ngOnInit(){this.defaultWay&&(this.selectedWay=this.defaultWay)}ngOnChanges(t){t.defaultWay&&!t.defaultWay.isFirstChange()&&this.defaultWay&&(this.selectedWay=this.defaultWay)}selectedNewListWay(t){this.genelistIDtoBeAdded="",this.selectedWay=t}processOutputGeneList(t){this.outputGeneList$.next(t),this.genelistIDtoBeAdded=t.name}processAnnotationTermsRequest(t){this.annotationTermsRequest$.next(t)}processAnnotationGenesRequest(t){this.annotationGenesRequest$.next(t),this.genelistIDtoBeAdded=(0,c.fE)(t)}processGeneListFromDatasetRequest(t){this.geneListFromDatasetRequest$.next(t),this.genelistIDtoBeAdded=(0,c.Kf)(t)}processNewGeneListFromExistedRequest(t){this.geneListFromExistedRequest$.next(t),this.genelistIDtoBeAdded=(0,c.XK)(t)}}return s.\u0275fac=function(t){return new(t||s)},s.\u0275cmp=e.Xpm({type:s,selectors:[["app-generate-new-gene-list"]],inputs:{defaultWay:"defaultWay",availableSpecies:"availableSpecies",availableGeneIDtypes:"availableGeneIDtypes",annotationTerms:"annotationTerms",allDatasetInfoForDisplay:"allDatasetInfoForDisplay",geneNumberAfterFilter:"geneNumberAfterFilter",availableGeneLists:"availableGeneLists",latestAddedGeneListID:"latestAddedGeneListID"},outputs:{outputGeneList$:"outputGeneList$",annotationTermsRequest$:"annotationTermsRequest$",annotationGenesRequest$:"annotationGenesRequest$",geneListFromDatasetRequest$:"geneListFromDatasetRequest$",geneListFromExistedRequest$:"geneListFromExistedRequest$"},features:[e.TTD],decls:7,vars:6,consts:[["data-testid","differentGenelistWay",1,"nav","nav-tabs"],["class","nav-item",4,"ngFor","ngForOf"],[3,"availableSpecies","availableGeneIDtypes","outputGeneList$",4,"ngIf"],[3,"availableSpecies","annotationTerms","annotationTermsRequest$","annotationGenesRequest$",4,"ngIf"],[3,"allDatasetInfoForDisplay","geneNumberAfterFilter","geneListFromDatasetRequest$",4,"ngIf"],[3,"availableGeneLists","request$",4,"ngIf"],["class","text-success","data-testid","geneListSuccessNote",4,"ngIf"],[1,"nav-item"],["href","javascript:void(0)",1,"nav-link",3,"ngClass","click"],[3,"availableSpecies","availableGeneIDtypes","outputGeneList$"],[3,"availableSpecies","annotationTerms","annotationTermsRequest$","annotationGenesRequest$"],[3,"allDatasetInfoForDisplay","geneNumberAfterFilter","geneListFromDatasetRequest$"],[3,"availableGeneLists","request$"],["data-testid","geneListSuccessNote",1,"text-success"]],template:function(t,n){1&t&&(e.TgZ(0,"nav",0),e.YNc(1,J,3,4,"li",1),e.qZA(),e.YNc(2,E,1,2,"app-input-gene-list",2),e.YNc(3,Q,1,2,"app-input-an-annotation-for-gene-list",3),e.YNc(4,M,1,2,"app-generate-new-gene-list-from-dataset",4),e.YNc(5,W,1,1,"app-generate-new-gene-list-from-existed-gene-lists",5),e.YNc(6,U,2,1,"p",6)),2&t&&(e.xp6(1),e.Q6J("ngForOf",n.availableWays),e.xp6(1),e.Q6J("ngIf","Input Manually"===n.selectedWay),e.xp6(1),e.Q6J("ngIf","Load Genes in a Pathway or GO term"===n.selectedWay),e.xp6(1),e.Q6J("ngIf","Obtain Top Variable Genes from Dataset"===n.selectedWay),e.xp6(1),e.Q6J("ngIf","New Gene List From the Existed Gene Lists"===n.selectedWay),e.xp6(1),e.Q6J("ngIf",n.genelistIDtoBeAdded&&n.genelistIDtoBeAdded===n.latestAddedGeneListID))},directives:[G.sg,G.O5,G.mk,L,f,Z,O],styles:[""],changeDetection:0}),s})()},1026:(F,T,l)=>{l.d(T,{z:()=>D});var e=l(3668),c=l(9133),G=l(3405),o=l(8735),d=l(8805),h=l(5389),I=l(6019);function L(u,f){if(1&u&&(e.TgZ(0,"option",5),e._uU(1),e.qZA()),2&u){const m=f.$implicit;e.Q6J("value",m.datasetID),e.xp6(1),e.hij(" ",m.description," ")}}function g(u,f){1&u&&(e.TgZ(0,"label",6),e._uU(1,"Please import a dataset first "),e.qZA())}const _=function(u){return{"form-inline":u}};let D=(()=>{class u{constructor(m){this.cdr=m,this.formInlineOrNot=!0,this.formWidth="15rem",this.selectedDatasetID$=new e.vpe,this.destroyNotifier$=new G.xQ,this.datasetForm=new c.cw({datasetID:new c.NI("",c.kI.required)})}ngOnInit(){this.datasetForm.get("datasetID").valueChanges.pipe((0,o.h)(m=>m),(0,d.R)(this.destroyNotifier$),(0,h.x)()).subscribe(m=>{"VALID"===this.datasetForm.get("datasetID").status&&this.selectedDatasetID$.next(m)})}ngOnChanges(m){m.allDatasetInfoForDisplay&&this.cdr.detectChanges()}ngOnDestroy(){this.destroyNotifier$.next(),this.destroyNotifier$.complete()}}return u.\u0275fac=function(m){return new(m||u)(e.Y36(e.sBO))},u.\u0275cmp=e.Xpm({type:u,selectors:[["app-select-dataset"]],inputs:{allDatasetInfoForDisplay:"allDatasetInfoForDisplay",formInlineOrNot:"formInlineOrNot",formWidth:"formWidth"},outputs:{selectedDatasetID$:"selectedDatasetID$"},features:[e.TTD],decls:7,vars:8,consts:[[3,"formGroup"],[1,"align-self-start",3,"ngClass"],["formControlName","datasetID","placeholder","select a dataset",1,"form-control","form-control-sm"],[3,"value",4,"ngFor","ngForOf"],["class","text-danger font-weight-light",4,"ngIf"],[3,"value"],[1,"text-danger","font-weight-light"]],template:function(m,p){1&m&&(e.TgZ(0,"form",0),e.TgZ(1,"div",1),e.TgZ(2,"h5"),e._uU(3,"Dataset:"),e.qZA(),e.TgZ(4,"select",2),e.YNc(5,L,2,2,"option",3),e.qZA(),e.YNc(6,g,2,0,"label",4),e.qZA(),e.qZA()),2&m&&(e.Q6J("formGroup",p.datasetForm),e.xp6(1),e.Q6J("ngClass",e.VKq(6,_,p.formInlineOrNot)),e.xp6(3),e.Udp("max-width",p.formWidth),e.xp6(1),e.Q6J("ngForOf",p.allDatasetInfoForDisplay),e.xp6(1),e.Q6J("ngIf",!(p.allDatasetInfoForDisplay&&p.allDatasetInfoForDisplay.length>0)))},directives:[c._Y,c.JL,c.sg,I.mk,c.EJ,c.JJ,c.u,I.sg,I.O5,c.YN,c.Kr],styles:[""],changeDetection:0}),u})()}}]);